# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.221.0
        with:
          ruby-version: '2.7.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # Installs ImageMagick, caches download. See https://github.com/mfinelli/setup-imagemagick
      - name: Setup ImageMagick
        uses: mfinelli/setup-imagemagick@v6.0.0

      # Cache image derivs, because they take a long time to generate
      # Single images and images in folders are matched
      # jp*g is used to glob match jpg and jpeg
      - name: 'Cache image derivatives'
        id: cache-image-derivs
        uses: actions/cache@v4
        with:
          path: img/
          key: ${{ runner.os }}-image-derivatives-${{ hashFiles('_data/raw_images/keywords/*.jp*g', '_data/raw_images/keywords/**/*.jp*g') }}
      
      # Generate image derivatives if cache is not found
      - name: 'Generate IIIF image derivatives'
        id: gen-img-derivs
        if: steps.cache-image-derivs.outputs.cache.hit != 'true'
        shell: bash
        run: bundle exec rake wax:derivatives:iiif keywords

      # Run the Wax tasks for our Keywords collections
      # This will generate pages, search index, and IIIF image derivatives
      - name: 'Wax build: Keywords'
        id: wax-tasks-kw
        shell: bash
        run: |
          bundle exec rake wax:pages keywords
          bundle exec rake wax:search main
      
      # Run Wax tasks for the 'Keywords descriptions' collection
      # Only needs pages generated for now
      - name: 'Wax build: Keywords descriptions'
        shell: bash
        run: bundle exec rake wax:pages keywords_descriptions
      
      - name: 'Wax build: People'
        shell: bash
        run: bundle exec rake wax:pages people

      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
